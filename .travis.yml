env:
  - distro: debianjessie
    init: "/sbin/init"
    run_opts: ""
    playbook: test.yml
  - distro: ubuntutrusty
    init: "/sbin/init"
    run_opts: ""
    playbook: test.yml
  - distro: ubuntuxenial
    init: "/sbin/init"
    run_opts: ""
    playbook: test.yml

services:
  - docker

before_install:
  - docker pull jebovic/${distro}-ansible:latest

script:
  # run container
  - container_id=$(mktemp)
  - docker run --detach --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro -p 9880:9880 --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} jebovic/${distro}-ansible:latest "${init}" > "${container_id}"
  # syntax checking
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} --syntax-check
  # test role
  - docker exec "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook}
  # test role idempotence
  - idempotence=$(mktemp)
  - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  # test role tasks
  - curl "http://localhost:9880/myapp.access" -d 'json={"event":"foobar"}'
  - >
    docker exec "$(cat ${container_id})" sh -c 'tail /var/log/td-agent/myapp.access*'
    | grep -q 'foobar'
    && (echo 'fluentd is working' && exit 0)
    || (echo 'fluentd is not working' && exit 1)

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  slack:
    secure: Q6rl8B+5FfFe7Mx1jjdgjmCuLiQduMMRBFLzPwszs93gjDsEOj1amG22Zlg/OAmdoh04FbgzsnISYln7JdZ7Ijs0VXEtOrOpzVdiZmrxYQMKbre7PsJJG2x8URpQBrSsJxmQnHOKKhWBdgV9smenNizJlM0Zwf2ZhRVe+TRmY+g6x6yV6cJ9kuR26K/R7IoP+PQXd/6u8i89J2R+yBadZFbLLPQdgALBV0w53szAkqYEPcDh4XkTCkfzbdNCwGmiAIIky8Ip9KbmMZtVphGyPip2a3CpY2V12ETv0G7xKk/hI0CxlT9KQ4110i9mYg0bHIH10Dauegq0503yHda3Ve20IIAdUXkIlP81qeMdXlutWDi60xAsqJKcrNWW03R80oROuGqOjmv+YKwVR8eUOy1Ax3gkug4i6le5oa85/C8mxg50ebJt3WFzVPJrhV+cZvt9qAzzNE/ATS6CqBUO9Ck2mJVHWbymQGwis/iuQNLlartTYS86whGVwPluJz8LbBXSjjsVa38GEo2lhRurFSRdOY1blRziSwLpbuQmADZrXQG9z1cryo2ZxckfsMlpsk3DSnc172VzM1NQAECwQXvpU2tPPHALvOMFx7FKypyDozzuQB4396vsOHePhGIwhh7hGiTx3c0dtou3Hm0zi2l5EUMgZmOM9yTPROZS/yY=
